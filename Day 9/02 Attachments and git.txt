---Unmanaged Scenario changes

@Metadata.layer: #CUSTOMER
@UI.headerInfo:{
    typeName: 'Travel',
    typeNamePlural: 'Travels',
    title: { value: 'TravelId' },
    description: { value: 'CustomerName' }
 }
annotate view ZATS_X_U_TRAVEL
    with 
{
    @UI.facet: [
                { 
                    purpose: #HEADER,
                    type: #DATAPOINT_REFERENCE,
                    label: 'Flight Ticket Price',
                    position: 10,
                    targetQualifier: 'price_data'
                },
                { 
                    purpose: #HEADER,
                    type: #DATAPOINT_REFERENCE,
                    label: 'Status',
                    position: 20,
                    targetQualifier: 'status'
                },
                { 
                    purpose: #STANDARD,
                    type: #COLLECTION,
                    position: 10,
                    id: 'super',
                    label: 'Additional Details'                
                },
                { 
                    purpose: #STANDARD,
                    type: #IDENTIFICATION_REFERENCE,
                    label: 'More Info',
                    position: 10,
                    parentId: 'super'
                },
                { 
                    purpose: #STANDARD,
                    type: #FIELDGROUP_REFERENCE,
                    label: 'Price data',
                    position: 20,
                    parentId: 'super',
                    targetQualifier: 'pricing'
                },{ 
                    purpose: #STANDARD,
                    type: #FIELDGROUP_REFERENCE,
                    label: 'Dates',
                    position: 30,
                    parentId: 'super',
                    targetQualifier: 'dates'
                }
               ]
    @UI.selectionField: [{ position: 10 }]
    @UI.lineItem: [{ position: 10 },
    { type: #FOR_ACTION, label: 'Set Status',
    dataAction: 'set_booked_status' }]
    @UI.identification: [{ position: 10 },
    { type: #FOR_ACTION, label: 'Set Status to Booked',
    dataAction: 'set_booked_status' }]
    TravelId;
    @UI.selectionField: [{ position: 20 }]
    @UI.lineItem: [{ position: 20 }]
    @UI.identification: [{ position: 20 }]
    AgencyId;
    @UI.selectionField: [{ position: 30 }]
    @UI.lineItem: [{ position: 30 }]
    @UI.identification: [{ position: 30 }]
    CustomerId;
    @UI.lineItem: [{ position: 40 }]
    @UI.fieldGroup: [{ qualifier: 'dates', label: 'Start Date', position: 10 }]
    BeginDate;
    @UI.fieldGroup: [{ qualifier: 'dates', label: 'End Date', position: 20 }]
    EndDate;
    @UI.fieldGroup: [{ qualifier: 'pricing', label: 'Booking Fee', position: 10 }]
    BookingFee;
    @UI.selectionField: [{ position: 40 }]
    @UI.lineItem: [{ position: 50 }]
    @UI.dataPoint: { qualifier: 'price_data', title: 'Flight Price' }
    @UI.fieldGroup: [{ qualifier: 'pricing', label: 'Total Price', position: 20 }]
    TotalPrice;
    @UI.fieldGroup: [{ qualifier: 'pricing', label: 'Currency Code', position: 30 }]
    CurrencyCode;
    @UI.identification: [{ position: 40 }]
    Memo;
    @UI.selectionField: [{ position: 50 }]
    @UI.lineItem: [{ position: 70 , importance: #HIGH }]
    @UI.fieldGroup: [{ qualifier: 'dates', label: 'Status', position: 30 }]
    @UI.dataPoint: { qualifier: 'status', title: 'Status' }
    Status;
   
}



@EndUserText.label: 'Service definition for unmanaged travel request'
define service ZATS_XX_SD_U_TRAVEL {
  expose ZATS_X_U_TRAVEL         as Travel;
  expose ZATS_XX_U_AGENCY        as Agency;
  expose ZATS_XX_U_CUSTOMER      as Customer;
  expose I_Country               as Country;
  expose I_Currency              as Currency;
  expose /DMO/I_Travel_Status_VH as Status;
}


@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Root Travel Business Object for unmanaged scenario'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Metadata.allowExtensions: true
define root view entity ZATS_X_U_TRAVEL as select from /dmo/travel as Travel
association[1] to ZATS_XX_U_AGENCY as _Agency on
$projection.AgencyId = _Agency.AgencyId
association[1] to ZATS_XX_U_CUSTOMER as _Customer on
$projection.CustomerId = _Customer.CustomerId
association[1] to I_Currency as _Currency on
$projection.CurrencyCode = _Currency.Currency
association[1] to /DMO/I_Travel_Status_VH as _TravelStatus on
$projection.Status = _TravelStatus.TravelStatus
{
@ObjectModel.text.element: [ 'Memo' ]
key travel_id as TravelId,
@ObjectModel.text.element: [ 'AgencyName' ]
@Consumption.valueHelpDefinition: [{ entity: { name: 'ZATS_XX_U_AGENCY', element: 'AgencyId' } }]
agency_id as AgencyId,
_Agency.Name as AgencyName,
@ObjectModel.text.element: [ 'CustomerName' ]
@Consumption.valueHelpDefinition: [{ entity: { name: 'ZATS_XX_U_CUSTOMER', element: 'CustomerId' } }]
customer_id as CustomerId,
_Customer.CustomerName as CustomerName,
begin_date as BeginDate,
end_date as EndDate,
@Semantics.amount.currencyCode: 'CurrencyCode'
booking_fee as BookingFee,
@Semantics.amount.currencyCode: 'CurrencyCode'
total_price as TotalPrice,
currency_code as CurrencyCode,
description as Memo,
@ObjectModel.text.element: [ 'TravelStatus' ]
@Consumption.valueHelpDefinition: [{ entity: { name: '/DMO/I_Travel_Status_VH', element: 'Status' } }]
status as Status,
_TravelStatus._Text[Language = $session.system_language].TravelStatus as TravelStatus,
createdby as Createdby,
createdat as Createdat,
lastchangedby as Lastchangedby,
lastchangedat as Lastchangedat,
_Agency,
_Customer,
_Currency,
_TravelStatus    
}



----Attachment changes

@EndUserText.label : 'Attachment table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zats_xx_attach {

  key client            : abap.clnt not null;
  key travel_id         : /dmo/travel_id not null;
  key id                : sysuuid_x16 not null;
  memo                  : abap.char(80);
  attachment            : zdte_xx_attach;
  filename              : zdte_xx_filen;
  filetype              : zdte_xx_filet;
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}



zdte_xx_attach - RAWSTRING 0
zdte_xx_filen and zdte_xx_filet = CHAR128


@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Attachment interface cds entity which'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity zats_xx_m_attach as select from zats_xx_attach
association to parent ZATS_XX_TRAVEL as _Travel on
    $projection.TravelId = _Travel.TravelId
{
    key travel_id as TravelId,
    @EndUserText.label: 'Attachment ID'
    key id as Id,
    @EndUserText.label: 'Comments'
    memo as Memo,
    @Semantics.largeObject: {
        mimeType: 'Filetype',
        fileName: 'Filename',
        contentDispositionPreference: #INLINE,
        acceptableMimeTypes: [ 'APPLICATION/PDF' ]
    }
    @EndUserText.label: 'Attachment'
    attachment as Attachment,
    @EndUserText.label: 'File Name'
    filename as Filename,
    @EndUserText.label: 'File Type'
    @Semantics.mimeType: true
    filetype as Filetype,
    @Semantics.user.createdBy: true
    local_created_by as LocalCreatedBy,
    @Semantics.systemDateTime.createdAt: true
    local_created_at as LocalCreatedAt,
    @Semantics.user.lastChangedBy: true
    local_last_changed_by as LocalLastChangedBy,
    @Semantics.systemDateTime.localInstanceLastChangedAt: true
    local_last_changed_at as LocalLastChangedAt,
     @Semantics.systemDateTime.lastChangedAt: true
    last_changed_at as LastChangedAt,
    _Travel
}



@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Travel Root of by RAP BO'
define root view entity ZATS_XX_TRAVEL as select from /dmo/travel_m

--Composition child for travel viz booking
composition[0..*] of ZATS_XX_BOOKING as _Booking 
--Composition child for travel viz attachment
composition[0..*] of zats_xx_m_attach as _Attachment 
--associations - lose coupling to get dependent data
association[1] to /DMO/I_Agency as _Agency on 
    $projection.AgencyId = _Agency.AgencyID
association[1] to /DMO/I_Customer as _Customer on
    $projection.CustomerId = _Customer.CustomerID
association[1] to I_Currency as _Currency on
    $projection.CurrencyCode = _Currency.Currency
association[1..1] to /DMO/I_Overall_Status_VH as _OverallStatus on
    $projection.OverallStatus = _OverallStatus.OverallStatus
{
    key travel_id as TravelId,
    agency_id as AgencyId,
    customer_id as CustomerId,
    begin_date as BeginDate,
    end_date as EndDate,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    booking_fee as BookingFee,
    @Semantics.amount.currencyCode: 'CurrencyCode'
    total_price as TotalPrice,
    currency_code as CurrencyCode,
    description as Description,
    overall_status as OverallStatus,
    @Semantics.user.createdBy: true
    created_by as CreatedBy,
    @Semantics.systemDateTime.createdAt: true
    created_at as CreatedAt,
    @Semantics.user.lastChangedBy: true
    last_changed_by as LastChangedBy,
    @Semantics.systemDateTime.lastChangedAt: true
    //Local ETag Field --> Odata Etag
    last_changed_at as LastChangedAt,
    case overall_status
        when 'O' then 'Open'
        when 'A' then 'Approved'
        when 'R' then 'Rejected'
        when 'X' then 'Cancelled'
        end as StatusText,
    case overall_status
        when 'O' then 2
        when 'A' then 3
        when 'R' then 1
        when 'X' then 1
        end as Criticality,
    /*Expose associations*/
    _Booking,
    _Attachment,
    _Agency,
    _Customer,
    _Currency,
    _OverallStatus
}



@EndUserText.label: 'My Travel processor projection'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@Metadata.allowExtensions: true
define root view entity ZATS_XX_TRAVEL_PROCESSOR as projection on ZATS_XX_TRAVEL
{
    @ObjectModel.text.element: [ 'Description' ]
    key TravelId,
    @ObjectModel.text.element: [ 'AgencyName' ]
    @Consumption.valueHelpDefinition: [{ 
        entity.name: '/DMO/I_Agency',
        entity.element: 'AgencyID'
     }]
    AgencyId,
    @Semantics.text: true
    _Agency.Name as AgencyName,
    @ObjectModel.text.element: [ 'CustomerName' ]
    @Consumption.valueHelpDefinition: [{ 
        entity.name: '/DMO/I_Customer',
        entity.element: 'CustomerID'
     }]
    CustomerId,
    @Semantics.text: true
    _Customer.LastName as CustomerName,
    BeginDate,
    EndDate,
    BookingFee,
    TotalPrice,
    CurrencyCode,
    @Semantics.text: true
    Description,
    @Consumption.valueHelpDefinition: [{ 
        entity.name: '/DMO/I_Overall_Status_VH',
        entity.element: 'OverallStatus'
     }]
    @ObjectModel.text.element: [ 'StatusText' ]
    OverallStatus,
    CreatedBy,
    CreatedAt,
    LastChangedBy,
    LastChangedAt,
    @Semantics.text: true
    StatusText,
    Criticality,
    /* Associations */
    _Agency,
    _Booking: redirected to composition child ZATS_XX_BOOKING_PROCESSOR,
    _Attachment: redirected to composition child ZATS_XX_Attach_PROCESSOR,
    _Currency,
    _Customer,
    _OverallStatus,
    @ObjectModel.virtualElementCalculatedBy: 'ABAP:ZCL_ATS_VE_CALC'
    @EndUserText.label: 'CO2 Tax'
    virtual CO2Tax : abap.int4,
    @ObjectModel.virtualElementCalculatedBy: 'ABAP:ZCL_ATS_VE_CALC'
    @EndUserText.label: 'Week Day'
    virtual dayOfTheFlight : abap.char( 9 )
    
}



@EndUserText.label: 'My Travel processor projection'
@AccessControl.authorizationCheck: #NOT_REQUIRED
@Metadata.allowExtensions: true
define view entity ZATS_XX_ATTACH_PROCESSOR as projection on zats_xx_m_attach
{
    key TravelId,
    key Id,
    Memo,
    Attachment,
    Filetype,
    Filename,
    LastChangedAt,
    LocalCreatedAt,
    LocalCreatedBy,
    LocalLastChangedAt,
    LocalLastChangedBy,
    _Travel: redirected to parent ZATS_XX_TRAVEL_PROCESSOR
}



managed implementation in class zbp_ats_xx_travel unique;
//guideline and best practice for definition to be followed
strict ( 2 );
//add draft feature at BO level
with draft;

//define the behavior for root entity
define behavior for ZATS_XX_TRAVEL alias Travel
//make the behavior pool/implemetation for travel
implementation in class zbp_ats_xx_travel unique
//telling the framework to insert data in this db table for travel request
persistent table /dmo/travel_m
//how the RAP should handle the locks - if a travel request is locked
//the other users cannot edit the childs - like its bookings and suppl
lock master
//mandatory to use total etag
total etag LastChangedAt
//controls the permissions and security settings for our RAP BO
authorization master ( instance )
//specify the draft table - will created by the rap framework
draft table zats_d_travel
//controlling the concurrency
etag master LastChangedAt
early numbering
with additional save
{
  //here are the operations which RAP with generate automatically (manage)
  create ( precheck );
  update ( precheck );
  delete;
  //a booking can only be created with travel request
  //dynamic feature control
  //Add draft also for booking
  association _Booking { create (features:instance); with draft; }
  association _Attachment { create; with draft; }
  //its a piece of code which is intented to be only
  //consumed within our RAP BO
  internal action reCalcTotalPrice;
  //Define determination to execute the code when
  //booking fee or curr code changes so we calc total price
  determination calculateTotalPrice on modify
            { create; field BookingFee, CurrencyCode; }

  //Checking custom business object rules
  validation validateHeaderData on save {create; field CustomerId, BeginDate, EndDate;}

  //static feature control
  field (readonly) TravelId, TotalPrice, CreatedBy, CreatedAt, LastChangedBy, LastChangedAt;
  field (mandatory) AgencyId, CustomerId, BeginDate, EndDate, OverallStatus, BookingFee, CurrencyCode;

  //data actions using factory action to create new instances of BO
  factory action copyTravel[1];
  //non factory actions which will change the state of the BO instance
  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;

  //create a new determine action
  determine action validationCustomer { validation validateHeaderData; }
  //Adding side-effect which inform RAP to reaload the total price if the booking
  //fee has been changed on the Frontend
  side effects {
    field BookingFee affects field TotalPrice;
    determine action validationCustomer executed on field CustomerId affects messages;
  }

  //adding the draft actions
  draft determine action Prepare;
  draft action Edit;
  draft action Resume;
  draft action Activate;
  draft action Discard;

  mapping for /dmo/travel_m{
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    TotalPrice = total_price;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    Description = description;
    OverallStatus = overall_status;
    CreatedBy = created_by;
    LastChangedBy = last_changed_by;
    CreatedAt = created_at;
    LastChangedAt = last_changed_at;
  }
}

//define the behavior for child entity
define behavior for ZATS_XX_BOOKING alias Booking
//make the behavior pool/implemetation for booking
implementation in class zbp_ats_xx_booking unique
//telling the framework to insert data in this db table for booking
persistent table /dmo/booking_m
//draft table for the booking
draft table zats_d_book
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId, BookingId;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;

  //Reconfirm that booking will create with travel draft
  association _Travel { with draft; }
  //Assure that child entity also managed with draft
  association _BookingSupplement { create; with draft; }

  //add a determination for the change in the booking also
  //TODO: Why the booking code is not triggering
  determination calculateTotalPrice on modify
            { field FlightPrice, CurrencyCode; }

  //Side effect
  side effects {
    field FlightPrice affects field _Travel.TotalPrice;
  }

  mapping for /dmo/booking_m{
    TravelId = travel_id;
    BookingId = booking_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    BookingStatus = booking_status;
    LastChangedAt = last_changed_at;
  }
}

//define the behavior for child entity
define behavior for ZATS_XX_BOOKSUPPL alias BookSuppl
//make the behavior pool/implemetation for travel
implementation in class zbp_ats_xx_boosuppl unique
//telling the framework to insert data in this db table for booking suppl
persistent table /dmo/booksuppl_m
draft table zats_d_booksp
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;
  field ( readonly ) BookingId, TravelId, BookingSupplementId;
  field ( mandatory ) Price, SupplementId;

  association _Travel { with draft; }
  association _Booking { with draft; }

  mapping for /dmo/booksuppl_m{
    TravelId = travel_id;
    BookingId = booking_id;
    BookingSupplementId = booking_supplement_id;
    SupplementId = supplement_id;
    Price = price;
    CurrencyCode = currency_code;
    LastChangedAt = last_changed_at;
  }
}

//define the behavior for child entity
define behavior for zats_xx_m_attach alias Attachment
//make the behavior pool/implemetation for booking
implementation in class zbp_ats_xx_attach unique
//telling the framework to insert data in this db table for booking
persistent table zats_xx_attach

lock dependent by _Travel
authorization dependent by _Travel
//draft table for the booking
draft table zats_d_attach
etag master LastChangedAt

{
  update;
  delete;
  field (numbering : managed) id;
  field ( readonly ) TravelId, id;

  //Reconfirm that booking will create with travel draft
  association _Travel { with draft; }

  mapping for zats_xx_attach{
    TravelId = travel_id;
    Id = Id;
    Attachment = attachment;
    Filename = filename;
    Filetype = filetype;
    Memo = memo;
    LastChangedAt = last_changed_at;
    LocalCreatedAt = local_created_at;
    LocalCreatedBy = local_created_by;
    LocalLastChangedAt = local_last_changed_at;
    LocalLastChangedBy = local_last_changed_by;
  }
}



projection;
strict ( 2 );
use draft;

define behavior for ZATS_XX_TRAVEL_PROCESSOR alias Travel
//create a new class for processor implementation
implementation in class zbp_ats_xx_travel_proc unique
{
  use create (augment, precheck) ;
  use update (precheck);
  use delete;

  use action activate;
  use action prepare;
  use action edit;
  use action discard;
  use action resume;

  use action copyTravel;
  use association _Booking { create; with draft; }
  use association _Attachment { create; with draft; }
}

define behavior for ZATS_XX_BOOKING_PROCESSOR alias Booking
{
  use update;
  use delete;

  use association _Travel { with draft; }
  use association _BookingSupplement { create; with draft; }
}

define behavior for ZATS_XX_BOOKSUPPL_PROCESSOR alias BookingSuppl
{
  use update;
  use delete;

  use association _Travel { with draft; }
  use association _Booking { with draft; }
}

define behavior for ZATS_XX_ATTACH_PROCESSOR alias Attachment
{
  use update;
  use delete;

  use association _Travel { with draft; }
}


@EndUserText.label: 'Processor App ke lie service'
define service ZATS_XX_SD_V2_PROCESSOR {
  expose ZATS_XX_TRAVEL_PROCESSOR    as Travel;
  expose ZATS_XX_BOOKING_PROCESSOR   as Booking;
  expose ZATS_XX_ATTACH_PROCESSOR    as Attachment;
  expose ZATS_XX_BOOKSUPPL_PROCESSOR as BookSupplement;
  expose /DMO/I_Agency               as Agency;
  expose /DMO/I_Customer             as Customer;
  expose /DMO/I_Carrier              as Carrier;
  expose /DMO/I_Connection           as Connection;
  expose /DMO/I_Overall_Status_VH    as OverallStatus;
  expose /DMO/I_Booking_Status_VH    as BookingStatus;
}


@Metadata.layer: #CORE
@UI.headerInfo:{ 
    typeName: 'Attachment',
    typeNamePlural: 'Attachments',
    title: { value: 'Id' },
    description: { value: 'Memo' }
}
annotate view ZATS_XX_ATTACH_PROCESSOR
    with 
{
    @UI.facet: [
                { 
                    purpose: #STANDARD,
                    type: #IDENTIFICATION_REFERENCE,
                    label: 'Attachment Info',
                    position: 10
                 }
    ]
    @UI.lineItem: [{ position: 10 }]
    @UI.identification: [{ position: 10 }]
    Id;
    @UI.lineItem: [{ position: 20 }]
    @UI.identification: [{ position: 20 }]
    Memo;
    @UI.lineItem: [{ position: 30 }]
    @UI.identification: [{ position: 30 }]
    Attachment;
    @UI.lineItem: [{ position: 40 }]
    @UI.identification: [{ position: 40 }]
    Filename;
    @UI.lineItem: [{ position: 50 }]
    @UI.identification: [{ position: 50 }]
    Filetype;
    @UI.identification: [{ position: 60 }]
    LocalCreatedAt;
    @UI.identification: [{ position: 70 }]
    LocalCreatedBy;
    
}


@Metadata.layer: #CUSTOMER
@UI.headerInfo:{
    typeName: 'Travel',
    typeNamePlural: 'Travels',
    title: { value: 'TravelId' },
    description: { value: '_Customer.FirstName' }
 }
annotate view ZATS_XX_TRAVEL_PROCESSOR
    with 
{
    @UI.facet: [
                { 
                    purpose: #HEADER,
                    type: #DATAPOINT_REFERENCE,
                    label: 'Flight Ticket Price',
                    position: 10,
                    targetQualifier: 'price_data'
                },
                { 
                    purpose: #HEADER,
                    type: #DATAPOINT_REFERENCE,
                    label: 'Status',
                    position: 20,
                    targetQualifier: 'status'
                },
                { 
                    purpose: #STANDARD,
                    type: #COLLECTION,
                    position: 10,
                    id: 'super',
                    label: 'Additional Details'                
                },
                { 
                    purpose: #STANDARD,
                    type: #IDENTIFICATION_REFERENCE,
                    label: 'More Info',
                    position: 10,
                    parentId: 'super'
                },
                { 
                    purpose: #STANDARD,
                    type: #FIELDGROUP_REFERENCE,
                    label: 'Price data',
                    position: 20,
                    parentId: 'super',
                    targetQualifier: 'pricing'
                },{ 
                    purpose: #STANDARD,
                    type: #FIELDGROUP_REFERENCE,
                    label: 'Dates',
                    position: 30,
                    parentId: 'super',
                    targetQualifier: 'dates'
                },
                { 
                    purpose: #STANDARD,
                    type: #LINEITEM_REFERENCE,
                    label: 'Bookings',
                    position: 20,
                    targetElement: '_Booking'
                },
                { 
                    purpose: #STANDARD,
                    type: #LINEITEM_REFERENCE,
                    label: 'Attachments',
                    position: 30,
                    targetElement: '_Attachment'
                }
                ,{ 
                    purpose: #STANDARD,
                    type: #FIELDGROUP_REFERENCE,
                    label: 'Admin Info',
                    position: 40,
                    parentId: 'super',
                    targetQualifier: 'spiderman'
                }
               ]
    @UI.selectionField: [{ position: 10 }]
    @UI.lineItem: [{ position: 10 },
    { type: #FOR_ACTION, label: 'Copy This Travel',
    dataAction: 'copyTravel' }]
    @UI.identification: [{ position: 10 },
    { type: #FOR_ACTION, label: 'Copy Maddi',
    dataAction: 'copyTravel' }]
    TravelId;
    @UI.selectionField: [{ position: 20 }]
    @UI.lineItem: [{ position: 20 }]
    @UI.identification: [{ position: 20 }]
    AgencyId;
    @UI.selectionField: [{ position: 30 }]
    @UI.lineItem: [{ position: 30 }]
    @UI.identification: [{ position: 30 }]
    CustomerId;
    @UI.lineItem: [{ position: 40 }]
    @UI.fieldGroup: [{ qualifier: 'dates', label: 'Start Date', position: 10 }]
    BeginDate;
    @UI.fieldGroup: [{ qualifier: 'dates', label: 'End Date', position: 20 }]
    EndDate;
    @UI.fieldGroup: [{ qualifier: 'pricing', label: 'Booking Fee', position: 10 }]
    BookingFee;
    @UI.selectionField: [{ position: 40 }]
    @UI.lineItem: [{ position: 50 }]
    @UI.dataPoint: { qualifier: 'price_data', title: 'Flight Price' }
    @UI.fieldGroup: [{ qualifier: 'pricing', label: 'Total Price', position: 20 }]
    TotalPrice;
    @UI.fieldGroup: [{ qualifier: 'pricing', label: 'Currency Code', position: 30 }]
    CurrencyCode;
//    Description;
    @UI.selectionField: [{ position: 50 }]
    @UI.lineItem: [{ position: 70 , criticality: 'Criticality',
                     importance: #HIGH }]
    @UI.dataPoint: { title: 'Travel Status', qualifier: 'status', criticality: 'Criticality' }
    @UI.fieldGroup: [{ qualifier: 'dates', label: 'Status', position: 30 }]
    OverallStatus;
    @UI.lineItem: [{ position: 80 , importance: #HIGH }]
    @EndUserText.label: 'CO2Tax'
    CO2Tax;
    @UI.lineItem: [{ position: 90 , importance: #HIGH }]
    @EndUserText.label: 'Day of Flight'
    dayOfTheFlight;
    
//    @UI.fieldGroup: [{ qualifier: 'spiderman', label: 'Created By', position: 10 }]
//    CreatedBy;
//    @UI.fieldGroup: [{ qualifier: 'spiderman', label: 'Created On', position: 20 }]
//    CreatedAt;
//    @UI.fieldGroup: [{ qualifier: 'spiderman', label: 'Changed By', position: 30 }]
//    LastChangedBy;
//    @UI.fieldGroup: [{ qualifier: 'spiderman', label: 'Changed On', position: 40 }]
//    LastChangedAt;
    
}


@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Attachment interface cds entity which'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity zats_xx_m_attach as select from zats_xx_attach
association to parent ZATS_XX_TRAVEL as _Travel on
    $projection.TravelId = _Travel.TravelId
{
    key travel_id as TravelId,
    @EndUserText.label: 'Attachment ID'
    key id as Id,
    @EndUserText.label: 'Comments'
    memo as Memo,
    @Semantics.largeObject: {
        mimeType: 'Filetype',
        fileName: 'Filename',
        contentDispositionPreference: #INLINE,
        acceptableMimeTypes: [ 'APPLICATION/PDF' ]
    }
    @EndUserText.label: 'Attachment'
    attachment as Attachment,
    @EndUserText.label: 'File Name'
    filename as Filename,
    @EndUserText.label: 'File Type'
    @Semantics.mimeType: true
    filetype as Filetype,
    @Semantics.user.createdBy: true
    local_created_by as LocalCreatedBy,
    @Semantics.systemDateTime.createdAt: true
    local_created_at as LocalCreatedAt,
    @Semantics.user.lastChangedBy: true
    local_last_changed_by as LocalLastChangedBy,
    @Semantics.systemDateTime.localInstanceLastChangedAt: true
    local_last_changed_at as LocalLastChangedAt,
     @Semantics.systemDateTime.lastChangedAt: true
    last_changed_at as LastChangedAt,
    _Travel
}


