@AbapCatalog.sqlViewName: 'ZATSXXCDSVIEW'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Old approach of CDS views'
define view ZATS_XX_CDS_VIEW as select from zats_xx_bpa
{
    key bp_id as BpId,
    bp_role as BpRole,
    company_name as CompanyName,
    street as Street,
    country as Country,
    region as Region,
    city as City
}





@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Business partners'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZI_ATS_XX_BPA as select from zats_xx_bpa
association[1] to I_Country as _Country on
$projection.CountryCode = _Country.Country
{
    key bp_id as BpId,
    bp_role as BpRole,
    company_name as CompanyName,
    street as Street,
    country as CountryCode,
    region as Region,
    city as City,
    _Country._Text[Language = $session.system_language].CountryName as CountryName
}







@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Product master data CDS entity'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZI_ATS_XX_PRODUCT as select from zats_xx_product
{
    key product_id as ProductId,
    name as Name,
    category as Category,
    @Semantics.amount.currencyCode: 'Currency'
    price as Price,
    currency as Currency,
    discount as Discount
}


@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Sales Fact data'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZI_ATS_XX_SALES as select from zats_xx_so_hdr  as hdr
association[1..*] to zats_xx_so_item as _Items on
$projection.OrderId = _Items.order_id
{
    key hdr.order_id as OrderId,
    hdr.order_no as OrderNo,
    hdr.buyer as Buyer,
    hdr.created_by as CreatedBy,
    hdr.created_on as CreatedOn,
    _Items    
}



@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Sales Composite, Cube view for sales data'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Analytics.dataCategory: #CUBE
define view entity ZI_ATS_XX_SALES_CUBE as select from ZI_ATS_XX_SALES
association[1] to ZI_ATS_XX_BPA as _BusinessPartner on
$projection.Buyer = _BusinessPartner.BpId
association[1] to ZI_ATS_XX_PRODUCT as _Product on 
$projection.Product = _Product.ProductId
{
    key ZI_ATS_XX_SALES.OrderId,
    key ZI_ATS_XX_SALES._Items.item_id as ItemId,
    ZI_ATS_XX_SALES.OrderNo,
    ZI_ATS_XX_SALES.Buyer,
    ZI_ATS_XX_SALES.CreatedBy,
    ZI_ATS_XX_SALES.CreatedOn,
    /* Associations */
    ZI_ATS_XX_SALES._Items.product as Product,
    @DefaultAggregation: #SUM
    @Semantics.amount.currencyCode: 'CurrencyCode'
    ZI_ATS_XX_SALES._Items.amount as GrossAmount,
    ZI_ATS_XX_SALES._Items.currency as CurrencyCode,
    @DefaultAggregation: #SUM
    @Semantics.quantity.unitOfMeasure: 'UnitOfMeasure'
    ZI_ATS_XX_SALES._Items.qty as Quantity,
    ZI_ATS_XX_SALES._Items.uom as UnitOfMeasure,
    _Product,
    _BusinessPartner
}


@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Sales Analytics Consumption view'
@Metadata.ignorePropagatedAnnotations: false
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Analytics.query: true
define view entity ZC_ATS_XX_SALES_ANA as select from ZI_ATS_XX_SALES_CUBE
{
    key _BusinessPartner.CompanyName,
    key _BusinessPartner.CountryName,
    GrossAmount,
    CurrencyCode,
    Quantity,
    UnitOfMeasure
}



@EndUserText.label: 'Service definition for Sales order model'
define service ZATS_XX_SO_SD {
  expose ZC_ATS_XX_SALES_ANA as SalesSet;
}

